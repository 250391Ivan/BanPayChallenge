openapi: 3.0.0
info:
  title: CRUD for BanPay
  description: Documentation for  methods BanPay Remember make banpay Database, run npm i and  run migrations  and  seeders, put on headers myToken and  add token
  version: 0.1.9
servers:
  - url: http://localhost:8085/apidocs/#/
    description: Development Enviroment
paths:
  http://localhost:8085/users/Token:
    get:
      summary: Use  this  method  for  make JWt  for  all petition
      description: Create token secret and library
      tags:
      - JWT
      
  http://localhost:8085/users/MakeUser:
    post:
      summary: Create new user on Database
      description: Is  necesary fill all  fields for  send  information
      tags:
      - User's
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdRol:
                  type: number
                  example: 4
                FirstName:
                  type: string
                  example: "Ivan"
                LastName:
                  type: string
                  example: "Pillado"
                Email:
                  type: string
                  example: "25ivan.pillado@gmail.com"
              required:
                - IdRol
                - FirstName
                - LastName
                - Email
  http://localhost:8085/users/AllUsers:
    get:
      summary: Get all users  on Databases
      description: Recover all infor  for user on Databeses
      tags:
      - User's
  http://localhost:8085/users/UniqueUser/:id:
    get:
      summary: Get info for user, and consume endpoint depend of  rol (Add id  number on url)
      description: Only rol admin, not  have  informatio  on api is unique empty
      tags:
      - User's
  http://localhost:8085/users/UpdateUser:
    post:
      summary: Update (IdRol, FirstName,LastName,Email) by  id  user
      description: This method update fields  about de summary per  id  user
      tags:
      - User's
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdUser:
                  type: number
                  example: 1
                IdRol:
                  type: number
                  example: 1
                FirstName:
                  type: string
                  example: "Ivan Dos"
                LastName:
                  type: string
                  example: "Pillado Dos"
                Email:
                  type: string
                  example: "25ivan.pilladoDos@gmail.com"
              required:
                - IdUser
                - IdRol
                - FirstName
                - LastName
                - Email
  http://localhost:8085/users/CleanUser:
    delete:
      summary: Eliminate  user by id
      description: Ass status  on Db for not eliminate  user, only change  status paranoic  mode, for  this  excersis delete permantly
      tags:
      - User's
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdUser:
                  type: number
                  example: 1
              required:
                - IdUser
               

  